@model Piranha.Manager.Models.PageType.EditModel

@using (var form = Html.BeginForm("Save", "PageTypeMgr", FormMethod.Post, new { @class = "form", @role = "form" })) {
	@Html.AntiForgeryToken()
	@Html.HiddenFor(m => m.Id)

	<div class="container-fluid">
		<div class="row">
			<div class="col-sm-12 buttons">
				<!-- Actions -->
				<div class="btn-group">
					<button type="submit" class="btn btn-labeled btn-success">
						<span class="btn-label">
							<i class="glyphicon glyphicon-ok"></i>
						</span>@Piranha.Manager.Resources.Global.Save
					</button>
				</div>
			</div>
		</div>

		<div class="row">
			<div class="col-sm-12">
				<div class="form-group">
					@Html.TextBoxFor(m => m.Name, new { @class = "form-control title", @placeholder = "Add name" })
					@Html.ValidationMessageFor(m => m.Name)
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-sm-8">
				<div class="form-group">
					@Html.TextAreaFor(m => m.Description, new { @class = "form-control count-me", @rows = 4, @placeholder = "Add optional description" })
					<p><span>@(!String.IsNullOrEmpty(Model.Description) ? Model.Description.Length : 0)</span>/255 characters</p>
					@Html.ValidationMessageFor(m => m.Description)
				</div>
			</div>
			<div class="col-sm-4">
				<div class="form-group">
					@Html.TextBoxFor(m => m.Slug, new { @class = "form-control meta", @placeholder = "Slug will be generated automatically" })
					@Html.ValidationMessageFor(m => m.Slug)
				</div>
				<div class="form-group">
					@Html.TextBoxFor(m => m.Route, new { @class = "form-control meta", @placeholder = "Add optional route" })
					@Html.ValidationMessageFor(m => m.Route)
				</div>
				<div class="form-group">
					@Html.TextBoxFor(m => m.View, new { @class = "form-control meta", @placeholder = "Add optional view" })
					@Html.ValidationMessageFor(m => m.View)
				</div>
			</div>
		</div>
	</div>
}